<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="GenreDBDataSet1" targetNamespace="http://tempuri.org/GenreDBDataSet1.xsd" xmlns:mstns="http://tempuri.org/GenreDBDataSet1.xsd" xmlns="http://tempuri.org/GenreDBDataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="LibraryDBConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="LibraryDBConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.LibraryApp.Properties.Settings.GlobalReference.Default.LibraryDBConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="GenreTableAdapter" GeneratorDataComponentClassName="GenreTableAdapter" Name="Genre" UserDataComponentName="GenreTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="LibraryDBConnectionString (Settings)" DbObjectName="dbo.Genre" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Genre] WHERE (([genre_id] = @Original_genre_id) AND ([genre_name] = @Original_genre_name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_genre_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="genre_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_genre_name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="genre_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Genre] ([genre_id], [genre_name]) VALUES (@genre_id, @genre_name);
SELECT genre_id, genre_name FROM Genre WHERE (genre_id = @genre_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@genre_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="genre_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@genre_name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="genre_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT genre_id, genre_name FROM dbo.Genre</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Genre] SET [genre_id] = @genre_id, [genre_name] = @genre_name WHERE (([genre_id] = @Original_genre_id) AND ([genre_name] = @Original_genre_name));
SELECT genre_id, genre_name FROM Genre WHERE (genre_id = @genre_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@genre_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="genre_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@genre_name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="genre_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_genre_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="genre_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_genre_name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="genre_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="genre_id" DataSetColumn="genre_id" />
              <Mapping SourceColumn="genre_name" DataSetColumn="genre_name" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="GenreDBDataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="GenreDBDataSet1" msprop:Generator_UserDSName="GenreDBDataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Genre" msprop:Generator_TableClassName="GenreDataTable" msprop:Generator_TableVarName="tableGenre" msprop:Generator_TablePropName="Genre" msprop:Generator_RowDeletingName="GenreRowDeleting" msprop:Generator_RowChangingName="GenreRowChanging" msprop:Generator_RowEvHandlerName="GenreRowChangeEventHandler" msprop:Generator_RowDeletedName="GenreRowDeleted" msprop:Generator_UserTableName="Genre" msprop:Generator_RowChangedName="GenreRowChanged" msprop:Generator_RowEvArgName="GenreRowChangeEvent" msprop:Generator_RowClassName="GenreRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="genre_id" msprop:Generator_ColumnVarNameInTable="columngenre_id" msprop:Generator_ColumnPropNameInRow="genre_id" msprop:Generator_ColumnPropNameInTable="genre_idColumn" msprop:Generator_UserColumnName="genre_id" type="xs:int" />
              <xs:element name="genre_name" msprop:Generator_ColumnVarNameInTable="columngenre_name" msprop:Generator_ColumnPropNameInRow="genre_name" msprop:Generator_ColumnPropNameInTable="genre_nameColumn" msprop:Generator_UserColumnName="genre_name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Genre" />
      <xs:field xpath="mstns:genre_id" />
    </xs:unique>
  </xs:element>
</xs:schema>